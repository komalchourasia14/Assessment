create table employee_information(employee_id int primary key, first_name varchar, last_name varchar, salary int, 
hire_date date, manager_id int, city varchar, state varchar, country varchar)

create table customer_information(customer_id int primary key, first_name varchar, last_name varchar, email varchar, phone varchar,
address varchar, city varchar, state varchar, country varchar, account_creation_date date)

create table order_details(order_id int primary key, customer_id int, order_date date, shipping_date date, status varchar, total_amount real,
payment_method varchar, billing_address varchar, shipping_address varchar, shipper_id int)

create table product_details(product_id int primary key, product_name varchar, category varchar, price real, stock_quanti int,
supplier_id int, reorder_level int, discontinued varchar, created_at date, updated_at date)

create table sales_record(sale_id int primary key, product_id int, customer_id int,	sale_date date,	quantity int, unit_price real, 
discount real, total_sale real, salesperson_id int, region varchar)


-- 1.
select * from employee_information

-- 2.
select * from customer_information where state = 'Nevada'

-- 3.
select count(*) as total_sales from sales_record

-- 4.
select * from product_details where price > 100

-- 5.
select first_name ||' '|| last_name as employee_name, salary from employee_information

-- 6. 
insert into product_details (product_id, product_name, category, price, stock_quanti,
supplier_id, reorder_level, discontinued, created_at, updated_at) values
(301,'Mobile','Electronics',70000,1000,101,500,'true','2022-10-14','2024-05-27'

-- 7.
update order_details set status = 'Completed' where order_id = 5;

-- 8.
delete from customer_information where customer_id = 2;

-- 9.
select salesperson_id, sum(total_sale) as total_sales from sales_record group by
salesperson_id

-- 10.
select pd.product_name, sr.quantity from sales_record sr join product_details pd on sr.product_id =
pd.product_id

-- 11.
select pd.product_name, sum(sr.total_sale) as total_sales from sales_record sr join product_details pd
on sr.product_id = pd.product_id group by pd.product_name order by total_sales desc
limit 5;

-- 12.
select * from order_details where order_date > '2023-01-01'

-- 13.	
select distinct ei.first_name, ei.last_name from employee_information emp join employee_information ei on emp.manager_id = ei.employee_id;

-- 14. 
select c.customer_id, c.first_name|| ' ' || last_name as customer_name , c.email, max(o.order_date) as latest_order_date
from Customer_information c join Order_details o on c.customer_id = o.customer_id
group by c.customer_id, c.first_name|| ' ' || last_name, c.email order by latest_order_date desc

-- 15.
select pd.category, sum(sr.total_sale) as total_revenue from sales_record sr
join product_details pd on sr.product_id = pd.product_id group by pd.category
order by total_revenue desc



-- 17.	
select ci.customer_id, ci.first_name||' '||last_name as customer_Name, ci.email, sum(od.Total_Amount) AS TotalSpent
from customer_information ci join Order_details od on ci.customer_id = od.customer_id
group by ci.customer_id, ci.first_name||' '||last_name, ci.email 
order by TotalSpent desc;

-- 18.
select od.order_id, od.order_date, ei.first_name||' '||last_name as sales_person from order_details od 
join employee_information ei on od.order_id = ei.employee_id;

-- 19.	
select * from sales_record where discount > 0.15 order by total_sale desc




-- 21.	
select region, sum(total_sale) as total_sales from sales_record group by region order by total_sales desc



-- 23.	
select * from product_details where product_id not in (select distinct product_id from
sales_record)



-- 25.	
select salesperson_id, sum(total_sale) as total_sales, rank() over (order by
sum(total_sale) desc) as rank_position from sales_record group by salesperson_id;